using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

using Luna.LibSpotify;
using System.IO;

namespace Luna.SpotifyShell {
	public class PlaybackSession  : Session {
		private readonly object streamLock = new object();
		private Stream playbackStream;
		private BinaryWriter playbackWriter;

		private byte[] g_appkey = new byte[]{
			0x01, 0xFE, 0x04, 0x6B, 0x34, 0xDB, 0xA0, 0x0C, 0xBC, 0x35, 0xDE, 0x2A, 0xCB, 0x98, 0xD3, 0xED,
			0x1A, 0xE8, 0x48, 0xC9, 0xDE, 0x03, 0x7B, 0x79, 0xD8, 0xF2, 0x7D, 0xC7, 0x4E, 0x81, 0x56, 0x5E,
			0x58, 0xD7, 0x2B, 0xF0, 0x34, 0xF8, 0x9F, 0x29, 0x63, 0xDD, 0x2D, 0xCA, 0x46, 0x99, 0xE0, 0x45,
			0xC4, 0x64, 0x8C, 0x41, 0xE2, 0xAC, 0x67, 0x13, 0x62, 0x3E, 0x41, 0xD5, 0x9E, 0xB6, 0x38, 0x55,
			0xBE, 0xFD, 0x94, 0xFF, 0xFD, 0xD6, 0x61, 0x10, 0x0E, 0x7B, 0xB8, 0x03, 0x93, 0x9C, 0x6A, 0x5A,
			0x52, 0x5D, 0x4B, 0x12, 0xFA, 0xA1, 0x32, 0x55, 0x7D, 0x91, 0x27, 0x69, 0x9B, 0xB6, 0x22, 0xAE,
			0xFC, 0xC6, 0xD7, 0xEA, 0x93, 0x9A, 0x3A, 0x04, 0xF7, 0xF4, 0x98, 0x48, 0xF7, 0xB1, 0xA1, 0xFB,
			0xFF, 0x6B, 0x5B, 0x4B, 0x83, 0x6C, 0x9A, 0x43, 0x4B, 0x0B, 0x3E, 0xE4, 0x3E, 0xB8, 0x12, 0x80,
			0x92, 0x57, 0xB5, 0xD7, 0xF8, 0x49, 0x2A, 0x7B, 0xEB, 0x5E, 0x70, 0x60, 0x48, 0x9A, 0x3F, 0x02,
			0xFD, 0xFE, 0x94, 0xD2, 0x6F, 0xB2, 0xA3, 0x54, 0x5B, 0x76, 0xA3, 0xCE, 0x29, 0xD7, 0xE4, 0xF9,
			0xB2, 0xD9, 0xCB, 0xB9, 0xE0, 0x14, 0xA8, 0x61, 0x8E, 0x10, 0xC7, 0x94, 0x4D, 0x96, 0x6A, 0xC0,
			0xF6, 0xB0, 0xF1, 0xDE, 0x3E, 0xD3, 0xDB, 0xAE, 0x15, 0x69, 0xD0, 0x98, 0xAF, 0x3A, 0xB7, 0x43,
			0x93, 0x8F, 0x1D, 0xED, 0xA5, 0xA8, 0xAE, 0xDB, 0xD5, 0x58, 0xA4, 0xA9, 0x0E, 0x23, 0x67, 0x99,
			0xC9, 0x76, 0x14, 0xA8, 0xE4, 0x74, 0x51, 0x7C, 0xB3, 0x7C, 0x73, 0x50, 0x88, 0xDB, 0xA2, 0x8C,
			0x73, 0xE8, 0xEC, 0xA9, 0x76, 0xB2, 0x40, 0xFB, 0x6C, 0xC7, 0x07, 0x4A, 0xDB, 0x79, 0x19, 0x8B,
			0x4C, 0xBD, 0x36, 0x2E, 0xBB, 0x8D, 0xDF, 0x3D, 0x14, 0x46, 0x3A, 0x23, 0x09, 0x73, 0xCF, 0xF4,
			0x9A, 0xB4, 0x14, 0x94, 0x75, 0x68, 0xF4, 0x14, 0x4E, 0x7B, 0x52, 0x8B, 0xD5, 0x89, 0x67, 0x49,
			0xEE, 0x3F, 0xD4, 0xDC, 0x8E, 0x5E, 0x78, 0x0F, 0x5A, 0x49, 0xD2, 0x2F, 0xCA, 0xB5, 0xA9, 0x82,
			0xCD, 0xD6, 0xB7, 0xCA, 0xB7, 0x89, 0x02, 0x24, 0x93, 0x2D, 0x41, 0x70, 0x36, 0x0E, 0x23, 0x97,
			0x68, 0x66, 0x99, 0x57, 0x9F, 0x0D, 0xC3, 0xDC, 0x04, 0x46, 0xC8, 0x19, 0xC4, 0xE6, 0x48, 0xEB,
			0x3A,
		};

		public Stream PlaybackStream {
			get { return playbackStream; }
			set {
				lock (streamLock) {
					playbackStream = value;
					playbackWriter = new BinaryWriter(playbackStream, Encoding.Default, true);
				}
			}
		}

		public PlaybackSession() {
			SessionConfig.ApplicationKey = g_appkey;
			SessionConfig.UserAgent = "SpotifyCmdService";
		}

		public override void onSessionCreated(SpErrorCode errorcode) {
			base.onSessionCreated(errorcode);

			if (errorcode == SpErrorCode.Ok) {
				Logger.Instance.log("Spotify session successfully created");
			} else {
				Logger.Instance.log("Could not create spotify session: {0}", errorcode);
			}
		}

		public override void onLoggedIn(SpErrorCode errorcode) {
			base.onLoggedIn(errorcode);

			if (errorcode == SpErrorCode.Ok) {
				Logger.Instance.log("User successfully logged in.");
			} else {
				Logger.Instance.log("User failed to log in: {0}.", errorcode);
			}
		}

		public override void onLoggedOut() {
			base.onLoggedOut();

			Logger.Instance.log("User logged out.");
		}

		public override void onSessionReleased() {
			base.onSessionReleased();

			Logger.Instance.log("Spotify session released");
		}

		public override void onLogMessage(string message) {
			base.onLogMessage(message);

			Logger.Instance.log(message);
		}

		public override int onMusicDelivery(AudioFormat audioFormat, short[] pcmData, int numFrames) {
			if (playbackStream != null) {
				lock (streamLock) {
					for (int n = 0; n < pcmData.Length; n++) {
						playbackWriter.Write(pcmData[n]);
					}

				}
			}

			return numFrames;
		}
	}
}
